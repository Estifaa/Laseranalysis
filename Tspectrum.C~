
#include "TCanvas.h"
#include "TMath.h"
#include "TH1.h"
#include "TF1.h"
#include "TRandom.h"
#include "TSpectrum.h"
#include "TVirtualFitter.h"

Int_t npeaks = 30;
Double_t fpeaks(Double_t *x, Double_t *par) {
  Double_t result = par[0] + par[1]*x[0];
  for (Int_t p=0;p<npeaks;p++) {
    Double_t norm  = par[3*p+2];
    Double_t mean  = par[3*p+3];
    Double_t sigma = par[3*p+4];
    result += norm*TMath::Gaus(x[0],mean,sigma);
  }
  return result;
}
void Tspectrum()
{




  TString filename1 ="~/lmartin/agdaq_laser/ana/output02301.root"; 
  TFile *f = new TFile(filename1);
  cout <<f <<endl;
  TCanvas *c1 = new TCanvas("c1","Profile histogram example",1200,1000);
  TH2D *hfix = (TH2D*) f->FindObjectAny("h_pad_amp_per_row_cut");
  // hfix->GetXaxis()->SetRangeUser(256,512);

  TProfile *hprof=hfix -> ProfileX ();
  hprof->SetLineStyle(1);
  hprof->SetLineColor(kBlack);
  hprof -> Draw();

  //Use TSpectrum to find the peak candidates
  TSpectrum *s = new TSpectrum(2*npeaks);
  Int_t nfound = s->Search(hprof,1,"",0.10);
  cout << "Found candidate peaks to fit.\n";
  cout << nfound;
  Double_t *xpeaks = s->GetPositionX();
  Double_t *ypeaks = s->GetPositionY();
  //Estimate background using TSpectrum::Background
  //TH1 *hb = s->Background(hprof,20,"same");
  //if (hb) c1->Update();

  return;
  
  cout << "Now fitting: Be patient.\n";
  TF1 *f1 = new TF1("f1",fpeaks,0,1000,2+3*npeaks);
  Double_t par[2000];
  for (int p=0;p<nfound;p++) {
      Double_t xp = xpeaks[p];
      Double_t yp = ypeaks[p];
      par[3*npeaks+2] = yp;
      par[3*npeaks+3] = xp;
      par[3*npeaks+4] = 3;
      npeaks++;
   }
  TVirtualFitter::Fitter(hprof,10+3*npeaks);
  f1->SetParameters(par);
  f1->SetNpx(1000);
  hprof->Fit("f1");

}


